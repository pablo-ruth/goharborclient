// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PostRepositoriesRepoNameTagsTagScanReader is a Reader for the PostRepositoriesRepoNameTagsTagScan structure.
type PostRepositoriesRepoNameTagsTagScanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRepositoriesRepoNameTagsTagScanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostRepositoriesRepoNameTagsTagScanOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPostRepositoriesRepoNameTagsTagScanUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostRepositoriesRepoNameTagsTagScanForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostRepositoriesRepoNameTagsTagScanNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewPostRepositoriesRepoNameTagsTagScanUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewPostRepositoriesRepoNameTagsTagScanServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostRepositoriesRepoNameTagsTagScanOK creates a PostRepositoriesRepoNameTagsTagScanOK with default headers values
func NewPostRepositoriesRepoNameTagsTagScanOK() *PostRepositoriesRepoNameTagsTagScanOK {
	return &PostRepositoriesRepoNameTagsTagScanOK{}
}

/*PostRepositoriesRepoNameTagsTagScanOK handles this case with default header values.

Successfully created the job to scan image.
*/
type PostRepositoriesRepoNameTagsTagScanOK struct {
}

func (o *PostRepositoriesRepoNameTagsTagScanOK) Error() string {
	return fmt.Sprintf("[POST /repositories/{repo_name}/tags/{tag}/scan][%d] postRepositoriesRepoNameTagsTagScanOK ", 200)
}

func (o *PostRepositoriesRepoNameTagsTagScanOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesRepoNameTagsTagScanUnauthorized creates a PostRepositoriesRepoNameTagsTagScanUnauthorized with default headers values
func NewPostRepositoriesRepoNameTagsTagScanUnauthorized() *PostRepositoriesRepoNameTagsTagScanUnauthorized {
	return &PostRepositoriesRepoNameTagsTagScanUnauthorized{}
}

/*PostRepositoriesRepoNameTagsTagScanUnauthorized handles this case with default header values.

User needs to login or call the API with correct credentials.
*/
type PostRepositoriesRepoNameTagsTagScanUnauthorized struct {
}

func (o *PostRepositoriesRepoNameTagsTagScanUnauthorized) Error() string {
	return fmt.Sprintf("[POST /repositories/{repo_name}/tags/{tag}/scan][%d] postRepositoriesRepoNameTagsTagScanUnauthorized ", 401)
}

func (o *PostRepositoriesRepoNameTagsTagScanUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesRepoNameTagsTagScanForbidden creates a PostRepositoriesRepoNameTagsTagScanForbidden with default headers values
func NewPostRepositoriesRepoNameTagsTagScanForbidden() *PostRepositoriesRepoNameTagsTagScanForbidden {
	return &PostRepositoriesRepoNameTagsTagScanForbidden{}
}

/*PostRepositoriesRepoNameTagsTagScanForbidden handles this case with default header values.

User doesn't have permission to perform the action.
*/
type PostRepositoriesRepoNameTagsTagScanForbidden struct {
}

func (o *PostRepositoriesRepoNameTagsTagScanForbidden) Error() string {
	return fmt.Sprintf("[POST /repositories/{repo_name}/tags/{tag}/scan][%d] postRepositoriesRepoNameTagsTagScanForbidden ", 403)
}

func (o *PostRepositoriesRepoNameTagsTagScanForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesRepoNameTagsTagScanNotFound creates a PostRepositoriesRepoNameTagsTagScanNotFound with default headers values
func NewPostRepositoriesRepoNameTagsTagScanNotFound() *PostRepositoriesRepoNameTagsTagScanNotFound {
	return &PostRepositoriesRepoNameTagsTagScanNotFound{}
}

/*PostRepositoriesRepoNameTagsTagScanNotFound handles this case with default header values.

The image does not exist in Harbor.
*/
type PostRepositoriesRepoNameTagsTagScanNotFound struct {
}

func (o *PostRepositoriesRepoNameTagsTagScanNotFound) Error() string {
	return fmt.Sprintf("[POST /repositories/{repo_name}/tags/{tag}/scan][%d] postRepositoriesRepoNameTagsTagScanNotFound ", 404)
}

func (o *PostRepositoriesRepoNameTagsTagScanNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesRepoNameTagsTagScanUnsupportedMediaType creates a PostRepositoriesRepoNameTagsTagScanUnsupportedMediaType with default headers values
func NewPostRepositoriesRepoNameTagsTagScanUnsupportedMediaType() *PostRepositoriesRepoNameTagsTagScanUnsupportedMediaType {
	return &PostRepositoriesRepoNameTagsTagScanUnsupportedMediaType{}
}

/*PostRepositoriesRepoNameTagsTagScanUnsupportedMediaType handles this case with default header values.

The Media Type of the request is not supported, it has to be "application/json"
*/
type PostRepositoriesRepoNameTagsTagScanUnsupportedMediaType struct {
}

func (o *PostRepositoriesRepoNameTagsTagScanUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /repositories/{repo_name}/tags/{tag}/scan][%d] postRepositoriesRepoNameTagsTagScanUnsupportedMediaType ", 415)
}

func (o *PostRepositoriesRepoNameTagsTagScanUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesRepoNameTagsTagScanServiceUnavailable creates a PostRepositoriesRepoNameTagsTagScanServiceUnavailable with default headers values
func NewPostRepositoriesRepoNameTagsTagScanServiceUnavailable() *PostRepositoriesRepoNameTagsTagScanServiceUnavailable {
	return &PostRepositoriesRepoNameTagsTagScanServiceUnavailable{}
}

/*PostRepositoriesRepoNameTagsTagScanServiceUnavailable handles this case with default header values.

Harbor is not deployed with Clair.
*/
type PostRepositoriesRepoNameTagsTagScanServiceUnavailable struct {
}

func (o *PostRepositoriesRepoNameTagsTagScanServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /repositories/{repo_name}/tags/{tag}/scan][%d] postRepositoriesRepoNameTagsTagScanServiceUnavailable ", 503)
}

func (o *PostRepositoriesRepoNameTagsTagScanServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
